# DATABASE

hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.show_sql=false
dataSourceClassName=org.h2.jdbcx.JdbcDataSource
# dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
jdbc.driverClassName=org.h2.Driver
jdbc.url=jdbc:h2:file:target/db;MVCC=TRUE
jdbc.username=sa
jdbc.password=
jdbc.maximumPoolSize=500

create.test.data=true

mail.smtp.host=
mail.smtp.user=
mail.smtp.password=
mail.smtp.port=25

# The id of the BlobStore bean to use, either fs.blob.store or http.blob.store
#id.blob.store=fs.blob.store
id.blob.store=migrating.blob.store
#id.blob.store=http.blob.store
id.blob.primary=fs.blob.store
id.blob.backup=primary.http.blob.store

# Voldemort
voldemort.blobstore.enabled=false
voldemort.storeName=KademiBlobStore
bootstrap_urls=tcp://localhost:6666

# This is where blobs are stored, if using the FileSystemBlobStore
blob.storage.location=target/blobs


# These values only apply if using the HttpBlobStore
blob.storage.http.server=localhost
# In production this would be a seperate blob server
blob.storage.http.backupServer=localhost
blob.storage.http.port=8085
blob.storage.http.backupPort=80
blob.storage.http.path=/blobs
blob.storage.http.user=admin
blob.storage.http.password=password8

hash.store.id=db.hash.store
#hash.store.id=migrating.hash.store

hibernate.show_sql=false
apps.config.dir=target/apps

templates.location=templates
templates.default.theme=yellow

media.metadata=true
media.rtp.streaming.ip=192.168.1.2

# this is a special domain i've setup, it resolves to 127.0.0.1 for A and MX records
primary.domain=loopbackdns.com

cookie.keys.file=cookie.keys.txt

# Enables processing of scheduled tasks. Only 1 member of a cluster should be enabled
scheduler.enabled=true

theme.admin.default=admin2

# this can be update,validate, etc
hibernate.hbm2ddl=update

# use either imagemagik.thumb.gen or ftn.thumb.gen. FTN is preferred by not working on ubuntu 13.10
thumb.gen.id=imagemagik.thumb.gen

# enable or disable elasticsearch. If enabled it will run on an NON-SECURE http port. Must be firewalled!!
elasticsearch.enabled=true

# specify a particular address for elasticsearch to bind to
elasticsearch.bind.address=
elasticsearch.remote.address=10.0.0.6
elasticsearch.remote.address2=10.0.0.1
# default to empty list, so will run a local node
elasticsearch.remote.addresses=search.manager.addresses.empty
# or use a single remote address
#elasticsearch.remote.addresses=search.manager.addresses.single

# if enabled, be sure to add newrelic.yml to the tomcat root, with auto_instrument=false
newrelic.enabled=false

# whether to use a local or remote LESS compiler
less.compiler.id=local.less.compiler
#less.compiler.id=remote.less.compiler
less.remote.url=http://localhost:8090/

https.admin.certificate=src/test/resources/loopbackdns.crt
https.admin.privatekey=src/test/resources/loopbackdns.key
https.admin.force=false

# SSL for cdn domain names
https.admin.cdn.certificate=src/test/resources/cdn_loopbackdns_com.crt
https.admin.cdn.privatekey=src/test/resources/cdn_loopbackdns_com.key

#geo.ip.db.file
geo.ip.db.file=src/test/resources/GeoLite2-City.mmdb

#Set to true to enforce strict access checking on untrusted code
untrusted.code.manager.enabled=false